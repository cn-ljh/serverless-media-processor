AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket for storing media files

Globals:
  Function:
    Runtime: python3.9
    Timeout: 60
    MemorySize: 1024
    Environment:
      Variables:
        S3_BUCKET_NAME: !Ref BucketName
        AWS_REGION: !Ref AWS::Region

Resources:
  DocumentProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handler.handler
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        ProcessAPI:
          Type: Api
          Properties:
            Path: /process
            Method: post
            RestApiId: !Ref DocumentProcessorApi
        GetTaskAPI:
          Type: Api
          Properties:
            Path: /tasks/{taskId}
            Method: get
            RestApiId: !Ref DocumentProcessorApi

  DocumentProcessorApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'POST,GET'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-tasks
      AttributeDefinitions:
        - AttributeName: task_id
          AttributeType: S
      KeySchema:
        - AttributeName: task_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

Outputs:
  DocumentProcessorApi:
    Description: API Gateway endpoint URL for processing documents
    Value: !Sub "https://${DocumentProcessorApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/prod/process"
  TasksApiEndpoint:
    Description: API Gateway endpoint URL for checking task status
    Value: !Sub "https://${DocumentProcessorApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/prod/tasks/{taskId}"
  TasksTableName:
    Description: Name of the DynamoDB table for task tracking
    Value: !Ref TasksTable

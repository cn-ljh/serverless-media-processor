AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket for storing media files

Resources:
  MediaProcessorApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'POST,GET'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      BinaryMediaTypes:
        - '*/*'
      OpenApiVersion: '3.0.1'
      DefinitionBody:
        openapi: '3.0.1'
        paths:
          /image/{key}:
            get:
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ImageProcessorFunction.Arn}/invocations
                contentHandling: CONVERT_TO_BINARY
                passthroughBehavior: when_no_match
                timeoutInMillis: 29000
          /doc/{object_key}:
            post:
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentProcessorFunction.Arn}/invocations
                contentHandling: CONVERT_TO_BINARY
                passthroughBehavior: when_no_match
                timeoutInMillis: 29000
          /task/{task_id}:
            get:
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentProcessorFunction.Arn}/invocations
                contentHandling: CONVERT_TO_BINARY
                passthroughBehavior: when_no_match
                timeoutInMillis: 29000

  ImageProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image-processor/
      Runtime: python3.9
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref BucketName
      Handler: handler.handler
      Timeout: 30
      MemorySize: 512
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketName
      Events:
        GetImageAPI:
          Type: Api
          Properties:
            Path: /image/{object_key}
            Method: get
            RestApiId: !Ref MediaProcessorApi

  DocumentProcessorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      DockerTag: latest
      DockerContext: document-processor
      Dockerfile: Dockerfile
    Properties:
      PackageType: Image
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref BucketName
          DDB_TABLE_NAME: !Ref TasksTable
      Timeout: 60
      MemorySize: 1024
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        ProcessAPI:
          Type: Api
          Properties:
            Path: /doc/{object_key}
            Method: post
            RestApiId: !Ref MediaProcessorApi
        GetTaskAPI:
          Type: Api
          Properties:
            Path: /task/{task_id}
            Method: get
            RestApiId: !Ref MediaProcessorApi

  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-tasks
      AttributeDefinitions:
        - AttributeName: TaskId
          AttributeType: S
        - AttributeName: TaskType
          AttributeType: S
      KeySchema:
        - AttributeName: TaskId
          KeyType: HASH
        - AttributeName: TaskType
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${MediaProcessorApi}.execute-api.${AWS::Region}.amazonaws.com.cn/prod"
  ImageEndpoint:
    Description: Image processing endpoint
    Value: !Sub "https://${MediaProcessorApi}.execute-api.${AWS::Region}.amazonaws.com.cn/prod/image/{key}?operations=resize,w_1000/watermark,text_54mI5p2D5omA5pyJ/format,jpg"
  DocumentEndpoint:
    Description: Document processing endpoint
    Value: !Sub "https://${MediaProcessorApi}.execute-api.${AWS::Region}.amazonaws.com.cn/prod/doc/{object_key}?operations=convert,target_png,source_docx"
  TaskEndpoint:
    Description: Task status endpoint
    Value: !Sub "https://${MediaProcessorApi}.execute-api.${AWS::Region}.amazonaws.com.cn/prod/task/{task_id}"
  TasksTableName:
    Description: Name of the DynamoDB table for task tracking
    Value: !Ref TasksTable
